from team import Team
from game import Game
from reddit import reddit
from reddit import subreddit
import re

teams = []
games = []

rankings = """
#1 SMU | #2 Kansas | #3 Arkansas | #4 Louisiana-Monroe | #5 USF | #6 Missouri | #7 New Mexico State | #8 Arizona | #9 Oklahoma State | #10 Iowa | #11 NC State | #12 UTEP | #13 Coastal Carolina | #14 Oklahoma | #15 Army | #16 Toledo | #17 Appalachian State | #18 Southern Miss | #19 Auburn | #20 UNLV | #21 Western Kentucky | #22 Northwestern | #23 Penn State | #24 Michigan | #25 Iowa State
"""

manualGames = """
Northwestern Colorado 42 42 2OT
"""

teamsPage = subreddit.wiki["teams"]


# Load Teams
for teamLine in teamsPage.content_md.splitlines():
    items = teamLine.split('|')
    team = Team(n=items[1], t=items[0])
    teams.append(team)
for Team in teams:
    if Team.name in rankings:
        div = rankings.split(" | ")
        for i in range(div.__len__()):
            if Team.name in div[i]:
                Team.rank = "#" + str(i+1)


def editScoreboard(content):
    wikiPage = subreddit.wiki["week_4_scores"]
    wikiPage.edit(content)


def loadGames():
    for submission in subreddit.new(limit=130):
        if "[GAME THREAD]" in submission.title:
            for i in range(teams.__len__()):
                if re.search(teams[i].name, submission.title) is not None and teams[i].inGame == False:
                    if teams[findTeamInText(submission.title)].name != teams[i].name:
                        continue
                    elif re.search(r'@\s' + teams[i].name, submission.title) is not None:

                        awayID = findTeamInText(submission.title, teams[i].name)

                        if teams[awayID].inGame == False:
                            games.append(Game())
                            games[-1].gameThread = submission.url
                            games[-1].home = i
                            games[-1].away = awayID
                            teams[games[-1].home].inGame = True
                            teams[games[-1].away].inGame = True
                    else:
                        homeID = findTeamInText(submission.title, teams[i].name)

                        if teams[homeID].inGame == False:
                            games.append(Game())
                            games[-1].gameThread = submission.url
                            games[-1].home = homeID
                            games[-1].away = i
                            teams[games[-1].home].inGame = True
                            teams[games[-1].away].inGame = True


def createText():
    text = "**Away**| | |**Home**| | | Status | Game | Postgame\n:-:|-|:-:|:-:|-|:-:|:-:|:-:|:-:\n"
    for i in range(games.__len__()):
        text = text + getGameLine(games[i]) + "\n"
    text = text + "\n\n[Last Week](https://www.reddit.com/r/FakeCollegeFootball/wiki/week_3_scores)"
    return text


def getGameDetails(gameID):
    submission = reddit.submission(url=games[gameID].gameThread)
    matches = re.findall(r'\[.+\]\(#f/\w+\)\|\d+\|\d+\|\d+\|\d+\|\*\*\d+\*\*', submission.selftext)
    if matches.__len__() == 2 and games[gameID].manual is False:
        g1 = matches[0].split('**')
        homeScore = g1[1]
        g2 = matches[1].split('**')
        awayScore = g2[1]

        matches = re.findall(r'\s\d:\d\d\|\d', submission.selftext)
        t1 = matches[0].split("|")
        quarter = t1[1]
        if re.search(r'\s0:00', submission.selftext) is not None:
            quarter = "**F**"
            if games[gameID].postThread == "":
                games[gameID].postThread = findPostGame(gameID)
            if homeScore > awayScore:
                homeScore = "**" + homeScore + "**"
            else:
                awayScore = "**" + awayScore + "**"
        else:
            if int(quarter) > 4:
                quarter = "OT"
            else:
                quarter = "Q" + quarter

        games[gameID].hScore = homeScore
        games[gameID].aScore = awayScore
        games[gameID].quarter = quarter
    else:
        games[gameID].manual = True
        manMatches = re.findall(teams[games[gameID].home].name + " " + teams[games[gameID].away].name + r'\s\d+\s\d+\s.+', manualGames)
        data = manMatches[0].split(" ")

        games[gameID].hScore = data[2]
        games[gameID].aScore = data[3]
        games[gameID].quarter = data[4]
        if games[gameID].quarter == "F" and games[gameID].postThread == "":
            games[gameID].postThread = findPostGame(gameID)







def getGameLine(game):
    gameLine = teams[game.away].printSetup() + game.aScore + " | " + \
               teams[game.home].printSetup() + game.hScore + " | " + game.quarter + \
               "| [Thread](" + game.gameThread + ") | "

    if game.postThread != '':
        gameLine = gameLine + "[Thread](" + game.postThread + ")"

    return gameLine


def findPostGame(gameID):
    for submission in subreddit.new(limit=100):
        if "[POST GAME THREAD]" in submission.title:
            pos1 = teams[games[gameID].home].name + " defeats " + teams[games[gameID].away].name + ","
            pos2 = teams[games[gameID].away].name + " defeats " + teams[games[gameID].home].name + ","

            if pos1 in submission.title or pos2 in submission.title:
                return submission.url
    return ""


def findTeamInText(text, other_team="U$C Sucks"):
    list = []
    for i in range(teams.__len__()):
        if teams[i].name == other_team:
            continue

        if teams[i].name in text:
            if teams[i].name in other_team:
                continue
            else:
                list.append(i)

    if list.__len__() > 1:
        id = list[0]
        for i in range(list.__len__()):
            if len(teams[list[i]].name) > len(teams[id].name):
                id = list[i]
        return id
    elif list.__len__() == 0:
        return None
    else:
        return list[0]

